#!/usr/bin/env bash

set -eo pipefail

function usage() {
    echo -e "Usage: bin/build SERVICE [TAG]

OPTIONS:
  -h, --help   print this message

ARGUMENTS:
  SERVICE    the service to build. Must be backend or frontend
  TAG        image tag in the format name:tag
"
}


# Build moodlenet-backend image
#
# Usage: build TAG
function build() {
    service="${1}"

    if [[ "${service}" != "backend" ]] && [[ "${service}" != "frontend" ]]; then
      echo "service ${service} must be backend or frontend"
      exit 1
    fi

    tag="${2}"
    version=$(cat docker/images/${service}/UPSTREAM_VERSION)
    docker_user="$(id -u):$(id -g)"

    echo -e "${COLOR_INFO}Building the moodlenet-${service} image with " \
    "upstream version ${version}${COLOR_RESET}"

    MOODLENET_VERSION="${version}" DOCKER_USER="${docker_user}" docker-compose build ${service}
    if [ "${tag}" != "moodlenet:${service}" ]; then
      docker tag moodlenet:${service} "${tag}"
    fi

    # Show the built images
    docker images "${tag}"
}

for i in "$@"
    do
        case $i in
            -h|--help|help)
                usage
                exit 0
                ;;
            *)
        esac
    done

if [ -z "${1}" ]; then
  usage
  exit 0
fi

build "${1}"
